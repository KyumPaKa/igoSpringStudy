<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=	"http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->
	<http pattern="/include/**" security="none" />
	<http auto-config="true" use-expressions="true" 
		create-session="never">
		<intercept-url pattern="/fb/**" access="hasAnyRole('ROLE_BABY','ROLE_MEMBER','ROLE_ADMIN','ROLE_MANAGER')" />
		<intercept-url pattern="/ub/**" access="hasAnyRole('ROLE_BABY','ROLE_MEMBER','ROLE_ADMIN','ROLE_MANAGER')" />
		<intercept-url pattern="/mm/**" access="hasAnyRole('ROLE_BABY','ROLE_MEMBER','ROLE_ADMIN','ROLE_MANAGER')" />
		<intercept-url pattern="/qa/**" access="hasAnyRole('ROLE_BABY','ROLE_MEMBER','ROLE_ADMIN','ROLE_MANAGER','ROLE_BLACK')" />
		<!-- 블랙리스트 -->
		<!-- 관리자 영역 설정 -->
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')" />
		<!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->
		<intercept-url pattern="/user/**" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<!-- 로그인 해야만 접속 가능 -->
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		
		<!-- 로그인폼 -->
		<form-login login-page="/user/login.do"	login-processing-url="/user/login_check.do" authentication-success-handler-ref="userLoginSuccessHandler" 
			authentication-failure-handler-ref="userLoginFailureHandler" username-parameter="userid" password-parameter="passwd" />
		<session-management>
			<!-- max-sessions="1" 동시접속 막기 
			error-if-maximum-exceeded="true" 로그인 세션 
				초과시 에러 옵션 expired-url="/user/login" 
				세션 만료시 이동할 주소 -->
			<concurrency-control max-sessions="1"
				expired-url="/user/login.do" 
				error-if-maximum-exceeded="true" />
		</session-management>
		<!-- 로그아웃 관련 처리 -->
		<logout delete-cookies=
		"JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
			logout-success-url="/user/login.do" 
			logout-url="/user/logout.do"
			invalidate-session="true" />
		<!-- 접근권한이 없는 경우의 코드 -->
		<access-denied-handler ref="userDeniedHandler" />
		<!-- 자동 로그인 관련 쿠키 저장, 
		세션이 종료된 후에도 자동 로그인할 수 있는 기능 
		86400 1일, 604800 7일 -->
		<remember-me key="userKey" token-validity-seconds="86400" />
		<headers>
        	<frame-options policy="SAMEORIGIN"/>
        </headers>
		<csrf disabled="true"/>
	</http>
	<beans:bean id="userDeniedHandler"
		class="com.igo.board.service.woo.UserDeniedHandler" />
	<beans:bean id="userLoginSuccessHandler"
		class=
"com.igo.board.service.woo.UserLoginSuccessHandler" />
	<beans:bean id="userLoginFailureHandler"
		class=
"com.igo.board.service.woo.UserLoginFailureHandler" />
	<!-- 로그인 인증을 처리하는 빈 -->
	<beans:bean id="userService" 
		class="com.igo.board.service.woo.UserAuthenticationService">
		<beans:constructor-arg name="sqlSession" 
		ref="sqlSession" />
	</beans:bean>
	<!-- 비밀번호 암호화 빈 -->
	<beans:bean id="bcryptPasswordEncoder"
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
	</beans:bean>
</beans:beans>