<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/include/**" location="/WEB-INF/views/include/" />
	<resources mapping="/images/**" location="/WEB-INF/views/images/" />
	<resources mapping="/json/**" location="/WEB-INF/views/json/" />
	<resources mapping="/ckeditor/**" location="/WEB-INF/views/ckeditor/" />
	<resources mapping="/summernote/**" location="/WEB-INF/views/summernote/" />
	<!-- <default-servlet-handler /> -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.example.spring02" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("d:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:/Users/IGO/Desktop" />
	</beans:bean>
	
	<!-- aop의 설정을 통한 자동적인 Proxy 객체 생성 -->
	<aop:aspectj-autoproxy />
	
	<!-- 인터셉터 선언 -->
	<beans:bean id="sampleInterceptor" class="com.example.spring02.interceptor.SampleInterceptor" />
	<beans:bean id="loginInterceptor" class="com.example.spring02.interceptor.LoginInterceptor" />
	<beans:bean id="adminInterceptor" class="com.example.spring02.interceptor.AdminInterceptor" />
	<!-- 인터셉터와 url 매핑 -->
	<interceptors>
		<interceptor>
			<mapping path="/shop/product/write.do" />
			<mapping path="/shop/product/insert.do" />
			<mapping path="/chart/*" />
			<mapping path="/pdf/*" />
			<beans:ref bean="adminInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/shop/cart/insert.do" />
			<mapping path="/shop/cart/list.do" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/shop/**"/>
			<beans:ref bean="sampleInterceptor" />
		</interceptor>
	</interceptors>
	
</beans:beans>
